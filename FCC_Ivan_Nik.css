/* Task_1 */
<h2 style="color: red;">CatPhotoApp</h2>

/* Task_2 */
<style>
  h2 {
    color: blue;
  }
</style>
<h2>CatPhotoApp</h2>

/* Task_3 ==> Use a CSS Class to Style an Element */
<style>
  .red-text {
    color: red;
  }
</style>

<h2 class="red-text">CatPhotoApp</h2>
<main>
  <p>Click here to view more <a href="#">cat photos</a>.</p>

/* Task_4 ==> Style Multiple Elements with a CSS Class */
<style>
  .red-text {
    color: red;
  }
</style>

<h2 class="red-text">CatPhotoApp</h2>
<main>
  <p class="red-text">Click here to view more <a href="#">cat photos</a>.</p>

/* Task_5 ==> Change the Font Size of an Element */
<style>
  .red-text {
    color: red;
  }
  p {
    font-size: 16px;
  }
</style>

<h2 class="red-text">CatPhotoApp</h2>
<main>
<p class="red-text">Click here to view more <a href="#">cat photos</a>.</p>

/* Task_6 ==> Set the Font Family of an Element */
<style>
  .red-text {
    color: red;
  }

  p {
    font-size: 16px;
    font-family: monospace;
  }
</style>

<h2 class="red-text">CatPhotoApp</h2>
<main>
  <p class="red-text">Click here to view more <a href="#">cat photos</a>.</p>

/* Task_7 ==>  */


/* Task_8 ==>  */


/* Task_9 ==> Size Your Images */

<style>
  .smaller-image {
    width: 100px;
  }
</style>

<h2 class="red-text">CatPhotoApp</h2>
<main>
  <p class="red-text">Click here to view more <a href="#">cat photos</a>.</p>

  <a href="#"><img src="https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg" alt="A cute orange cat lying on its back." class="smaller-image"></a>


/* Task_10 ==> Add Borders Around Your Elements */ 

<style>
.thick-green-border {
  border-color: green;
  border-width: 10px;
  border-style: solid;
}
</style>

<a href="#"><img class="smaller-image thick-green-border" src="https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg" alt="A cute orange cat lying on its back."></a>


/* Task_11 ==> Add Rounded Corners with border-radius */

<style>
.smaller-image {
  width: 100px;
  border-radius: 10px;
}
</style>

/* Task_12 ==> Make Circular Images with a border-radius */

<style>
.thick-green-border {
  border-color: green;
  border-width: 10px;
  border-style: solid;
  border-radius: 50%;
}
</style>

/* Task_13 ==> Give a Background Color to a div Element */

<style>
.silver-background {
  background-color: silver;
}
</style>

<div class="silver-background">
    <p>Things cats love:</p>
    <ul>
      <li>cat nip</li>
      <li>laser pointers</li>
      <li>lasagna</li>
    </ul>
    <p>Top 3 things cats hate:</p>
    <ol>
      <li>flea treatment</li>
      <li>thunder</li>
      <li>other cats</li>
    </ol>
  </div>

  /* Task_14 ==> Set the id of an Element */

  <form action="https://freecatphotoapp.com/submit-cat-photo" id="cat-photo-form">
    <label><input type="radio" name="indoor-outdoor" checked> Indoor</label>
    <label><input type="radio" name="indoor-outdoor"> Outdoor</label><br>
    <label><input type="checkbox" name="personality" checked> Loving</label>
    <label><input type="checkbox" name="personality"> Lazy</label>
    <label><input type="checkbox" name="personality"> Energetic</label><br>
    <input type="text" placeholder="cat photo URL" required>
    <button type="submit">Submit</button>
  </form>

  /* Task_15 ==> Use an id Attribute to Style an Element */
  
  <style>
  #cat-photo-form {
    background-color: green;
  }
  </style>

/* Task_16 ==> Adjust the Padding of an Element */
<style>
  .injected-text {
    margin-bottom: -25px;
    text-align: center;
  }

  .box {
    border-style: solid;
    border-color: black;
    border-width: 5px;
    text-align: center;
  }

  .yellow-box {
    background-color: yellow;
    padding: 10px;
  }

  .red-box {
    background-color: crimson;
    color: #fff;
    padding: 20px;
  }

  .blue-box {
    background-color: blue;
    color: #fff;
    padding: 20px;
  }
</style>
<h5 class="injected-text">margin</h5>

/* Task_17 ==> Adjust the Margin of an Element */
<style>
  .injected-text {
    margin-bottom: -25px;
    text-align: center;
  }

  .box {
    border-style: solid;
    border-color: black;
    border-width: 5px;
    text-align: center;
  }

  .yellow-box {
    background-color: yellow;
    padding: 10px;
  }

  .red-box {
    background-color: crimson;
    color: #fff;
    padding: 20px;
    margin: 20px;
  }

  .blue-box {
    background-color: blue;
    color: #fff;
    padding: 20px;
    margin: 20px;
  }
</style>
<h5 class="injected-text">margin</h5>

<div class="box yellow-box">
  <h5 class="box red-box">padding</h5>
  <h5 class="box blue-box">padding</h5>
</div>

/* Task_18 ==> Add a Negative Margin to an Element */
.blue-box {
  background-color: blue;
  color: #fff;
  padding: 20px;
  margin: -15px;
}

/* Task_19 ==> Add Different Padding to Each Side of an Element */
.blue-box {
  background-color: blue;
  color: #fff;
  padding-top: 40px;
  padding-right: 20px;
  padding-bottom: 20px;
  padding-left: 40px;
}

/* Task_20 ==> Add Different Margins to Each Side of an Element */ 
.blue-box {
  background-color: blue;
  color: #fff;
  margin-top: 40px;
  margin-right: 20px;
  margin-bottom: 20px;
  margin-left: 40px;
}

/* Task_21 ==> Use Clockwise Notation to Specify the Margin of an Element */ 
blue-box {
  background-color: blue;
  color: #fff;
  padding: 40px 20px 20px 40px;
}

/* Task_22 ==> Use Clockwise Notation to Specify the Margin of an Element */ 
.blue-box {
  background-color: blue;
  color: #fff;
  margin: 40px 20px 20px 40px;
}

/* Task_23 ==> Use Attribute Selectors to Style Elements */ 
[type="checkbox"] {
  margin-top: 10px;
  margin-bottom: 15px;
}

/* Task_24 ==> Style the HTML Body Element */
<style>
  body {
    background-color: black;
  }
</style>

/* Task_25 ==> Inherit Styles from the Body Element */
<style>
  body {
    background-color: black;
    color: green;
    font-family: monospace;
  }
</style>

<h1>Hello World</h1>

/* Task_26 ==> Prioritize One Style Over Another */
<style>
  .pink-text {
    color: pink;
  }
  
  body {
    background-color: black;
    font-family: monospace;
    color: green;
  }
</style>
<h1 class="pink-text">Hello World!</h1>

/* Task_27 ==> Override Styles in Subsequent CSS */
<style>
  body {
    background-color: black;
    font-family: monospace;
    color: green;
  }
  .pink-text {
    color: pink;
  }
  .blue-text {
    color: blue;
  }
</style>
<h1 class="pink-text blue-text">Hello World!</h1>


/* Task_28 ==> Use RGB values to Color Elements */
<style>
  body {
    background-color: rgb(0, 0, 0);
  }
</style>

/* Task_29 ==> Use RGB to Mix Colors */
<style>
  .red-text {
    color: rgb(255, 0, 0);
  }
  .orchid-text {
    color: rgb(218, 112, 214);
  }
  .sienna-text {
    color: rgb(160, 82, 45);
  }
  .blue-text {
    color: rgb(0, 0, 255);
  }
</style>

<h1 class="red-text">I am red!</h1>

<h1 class="orchid-text">I am orchid!</h1>

<h1 class="sienna-text">I am sienna!</h1>

<h1 class="blue-text">I am blue!</h1>

/* Task_30 ==> Use Hex Code for Specific Colors */
<style>
  body {
    background-color: #000000;
  }
</style>

/* Task_31 ==> Use Hex Code to Mix Colors */
<style>
  .red-text {
    color: #FF0000;
  }
  .green-text {
    color: #00FF00;
  }
  .dodger-blue-text {
    color: #1E90FF;
  }
  .orange-text {
    color: #FFA500;
  }
</style>

<h1 class="red-text">I am red!</h1>

<h1 class="green-text">I am green!</h1>

<h1 class="dodger-blue-text">I am dodger blue!</h1>

<h1 class="orange-text">I am orange!</h1>

/* Task_32 ==> Use Abbreviated Hex Code */
<style>
  .red-text {
    color: #F00;
  }
  .fuchsia-text {
    color: #F0F;
  }
  .cyan-text {
    color: #0FF;
  }
  .green-text {
    color: #0F0;
  }
</style>

<h1 class="red-text">I am red!</h1>

<h1 class="fuchsia-text">I am fuchsia!</h1>

<h1 class="cyan-text">I am cyan!</h1>

<h1 class="green-text">I am green!</h1>

/* Task_33 ==> Override Class Declarations by Styling ID Attributes */
<style>
  body {
    background-color: black;
    font-family: monospace;
    color: green;
  }
  #orange-text {
    color: orange;
  }
  .pink-text {
    color: pink;
  }
  .blue-text {
    color: blue;
  }
  
</style>
<h1 id="orange-text" class="pink-text blue-text">Hello World!</h1>

/* Task_34 ==> Override Class Declarations with Inline Styles */
<style>
  body {
    background-color: black;
    font-family: monospace;
    color: green;
  }
  #orange-text {
    color: orange;
  }
  .pink-text {
    color: pink;
  }
  .blue-text {
    color: blue;
  }
</style>
<h1 id="orange-text" class="pink-text blue-text" style="color: white";>Hello World!</h1>

/* Task_35 ==> Override All Other Styles by using Important */
<style>
  body {
    background-color: black;
    font-family: monospace;
    color: green;
  }
  #orange-text {
    color: orange;
  }
  .pink-text {
    color: pink !important;
  }
  .blue-text {
    color: blue;
  }
</style>
<h1 id="orange-text" class="pink-text blue-text" style="color: white">Hello World!</h1>


/* Task_36 ==> Import a Google Font */
<link href="https://fonts.googleapis.com/css?family=Lobster" rel="stylesheet" type="text/css">
<style>
  .red-text {
    color: red;
  }

  p {
    font-size: 16px;
    font-family: monospace;
  }

  h2 {
    font-family: Lobster;
  }
</style>

<h2 class="red-text">CatPhotoApp</h2>

/* Task_37 ==> Specify How Fonts Should Degrade */
<!--<link href="https://fonts.googleapis.com/css?family=Lobster" rel="stylesheet" type="text/css">-->
<style>
  .red-text {
    color: red;
  }

  h2 {
    font-family: Lobster, monospace;
  }
  